{"ast":null,"code":"import _classCallCheck from \"/home/yash_khakhar/pixabay_image_finder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash_khakhar/pixabay_image_finder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash_khakhar/pixabay_image_finder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash_khakhar/pixabay_image_finder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash_khakhar/pixabay_image_finder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/yash_khakhar/pixabay_image_finder/src/components/image-results/imageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nvar imageResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(imageResults, _Component);\n\n  function imageResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, imageResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(imageResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      currentImg: ''\n    };\n\n    _this.handleOpen = function (img) {\n      _this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(imageResults, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var imageListContent;\n      var images = this.props.images;\n\n      if (images) {\n        imageListContent = React.createElement(GridList, {\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, images.map(function (img) {\n          return React.createElement(GridTile, {\n            title: img.tags,\n            key: img.id,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, \"by \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, img.user)),\n            actionIcon: React.createElement(IconButton, {\n              onClick: function onClick() {\n                return _this2.handleOpen(img.largeImageURL);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, React.createElement(ZoomIn, {\n              color: \"white\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.largeImageURL,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        imageListContent = null;\n      }\n\n      var actions = [React.createElement(FlatButton, {\n        label: \"Close\",\n        primary: true,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, imageListContent, React.createElement(Dialog, {\n        actions: actions,\n        modal: false,\n        open: this.state.open,\n        onRequestClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.currentImg,\n        alt: \"\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return imageResults;\n}(Component);\n\nimageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default imageResults;","map":{"version":3,"sources":["/home/yash_khakhar/pixabay_image_finder/src/components/image-results/imageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","imageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","images","props","map","tags","id","user","largeImageURL","actions","width","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {GridList, GridTile} from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass imageResults extends Component {\n\n    state = {\n        open:false,\n        currentImg:''\n\n    }\n\n    handleOpen = img => {\n        this.setState({open:true,currentImg:img});\n    }\n\n    handleClose = () => {\n        this.setState({open:false});\n    }\n  render() {\n\n     let imageListContent;\n\n    const { images } = this.props;\n    if(images){\n        imageListContent = (\n            <GridList cols = {3}>\n                {images.map(img => (\n                    <GridTile title={img.tags}\n                        key = {img.id}\n                        subtitle = {\n                            <span>\n                                by <strong>{img.user}</strong>\n                            </span>\n                        }\n                        actionIcon = {\n                            <IconButton onClick = {() => this.handleOpen(img.largeImageURL)}>\n                                <ZoomIn color=\"white\" />\n                            </IconButton>\n\n                        }>\n\n                        <img src = {img.largeImageURL} alt=\"\"/>\n                    </GridTile>\n                ))}\n            </GridList>\n        )\n    }\n    else{\n\n        imageListContent = null;\n    }\n\n    const actions = [\n        <FlatButton label=\"Close\" primary = {true} onClick={this.handleClose} />\n    ]\n    return (\n      <div>\n        {imageListContent}\n        <Dialog \n            actions = {actions}\n            modal = {false}\n            open = {this.state.open}\n            onRequestClose = {this.handleClose}\n        >\n            <img src = {this.state.currentImg} alt=\"\" style={{width:'100%'}}/>\n        \n        </Dialog>\n      </div>\n    )\n  }\n}\n\nimageResults.propTypes = {\n    images: PropTypes.array.isRequired\n}\n\nexport default imageResults;"]},"metadata":{},"sourceType":"module"}